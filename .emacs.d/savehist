;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(erc-action-history-list erc-nick-history-list imenu--history-list compile-history command-history jabber-account-history buffer-name-history set-variable-value-history read-expression-history jabber-jid-history erc-server-history-list minibuffer-history extended-command-history file-name-history))
(setq erc-nick-history-list '("xf0e"))
(setq imenu--history-list '("begin" "fprintf" "main"))
(setq compile-history '("gcc -o add add.c " "gcc -ggdb -o level2 overflow.c " "gcc -ggdb -fno-stack-protect -o level2 overflow.c " "gcc bench.c -Ofast -march=native -lgomp -std=gnu11 -fwhole-program -Wall -Wextra  -Wpsabi -o c_memadd_bench" "gcc bench.c -Ofast -march=native -lgomp -std=gnu11 -fwhole-program -Wall -Wextra -o c_memadd_bench" "gcc memad_bench.c -Ofast -march=native -lgomp -std=gnu11 -fwhole-program -Wall -Wextra -o c_memadd_bench" "g++ bench.cpp -Ofast -march=native -std=gnu++1y -lgomp -fwhole-program -Wall -Wextra -o cpp_memadd_bench"))
(setq command-history '((erc ':server "irc.freenode.net" ':port 6667 ':nick "xf0e" ':password "msmsiok") (execute-extended-command nil "erc") (load-theme 'gruvbox nil nil) (execute-extended-command nil "load-theme") (ibuffer-find-file "~/tmp/tunlr.net" t) (erc ':server "irc.freenode.net" ':port 6667 ':nick "xf0e" ':password "msmsiok") (execute-extended-command nil "erc") (erc ':server "irc.freenode.net" ':port 6667 ':nick "xf0e" ':password "msmsiok") (execute-extended-command nil "erc") (load-theme 'gruvbox nil nil) (execute-extended-command nil "load-theme") (erc ':server "irc.freenode.net" ':port 6667 ':nick "xf0e" ':password "msmsiok") (execute-extended-command nil "erc") (load-theme 'gruvbox nil nil) (execute-extended-command nil "load-theme") (load-theme 'gruvbox nil nil) (execute-extended-command nil "load-theme") (find-file "/tmp/music.sh" t) (load-theme 'gruvbox nil nil) (execute-extended-command nil "load-theme") (load-file "~/.emacs.d/elpa/eide-20140602.200/eide.elc") (execute-extended-command nil "load-file") (load-theme 'gruvbox nil nil) (execute-extended-command nil "load-theme") (load-theme 'gruvbox nil nil) (execute-extended-command nil "load-theme") (load-theme 'tango nil nil) (execute-extended-command nil "load-theme") (load-theme 'monochrome nil nil) (execute-extended-command nil "load-theme") (load-theme 'misterioso nil nil)))
(setq buffer-name-history '("*-jabber-roster-*"))
(setq set-variable-value-history '("\"[%t] %n> \""))
(setq read-expression-history '("buffer"))
(setq jabber-jid-history '("lorchess@conference.delta.pm" "dikiy@jabber.ru" "lorchess@conference.delta.pm"))
(setq erc-server-history-list '("irc.freenode.net"))
(setq minibuffer-history '("6667" "gruvbox" "6667" "gruvbox" "6667" "gruvbox" "tango" "monochrome" "misterioso" "manoj-dark" "gruvbox" "eide-settings" "eide-coding" "eide-dark" "dichromacy" "deeper-blue" "alect-dark" "adwaita" "sd" "23" "wombat" "okular --page=1 fasta.pdf" "xelatex -interaction=nonstopmode fasta" "pug" "Russian" "English" "2" "26" "alect-dark" "monochrome"))
(setq extended-command-history '("erc" "load-theme" "erc" "load-theme" "erc" "load-theme" "load-file" "load-theme" "package-list-packages" "linum-mode" "insert-pair" "insert-diary-entry" "insert-char" "load-theme" "package-list-packages" "eval-buffer" "show-paren-mode" "rainbow-delimiters-mode" "load-file" "package-list-packages" "auto-complete" "autoconf-mode" "auto-complete" "imenu" "eval-region" "follow-mode" "flycheck-mode" "line-number-mode" "flycheck-mode" "linum-mode"))
(setq file-name-history '("~/tmp/tunlr.net" "/tmp/music.sh" "/tmp/lease" "/tmp/scr.sh" "/tmp/add.c" "/tmp/overflow.c" "/tmp/who.php" "~/.emacs.d/scratch.el" "~/doc/tex/fasta.tex" "~/.emacs.d/tex.el" "~/.emacs.d/cdlatex.el" "/home/xf0e/.emacs.d/apperance.el" "/home/xf0e/.emacs" "/home/xf0e/tmp/bench.c" "~/tmp/bench.c" "~/tmp/bench.cpp" "~/tmp/get_accuradio.py" "/home/xf0e/tmp/raster_to_vector.sh" "/home/xf0e/.traceedit/conf/traceedit.xml" "/tmp/bubble.cpp" "/home/xf0e/.emacs" "/home/xf0e/.emacs.d/apperance.el" "/home/xf0e/.emacs" "/home/xf0e/Dropbox/org/schoen.org" "/home/xf0e/Dropbox/org/things_to_read.org" "/home/xf0e/Dropbox/org/blabla.org" "~/Dropbox/org/schoen.org" "~/Dropbox/org/songs.org" "~/Dropbox/org/linux_tips.org" "~/Dropbox/org/blabla.org"))
(setq search-ring '("font" "theme" "helm" "aftern" "buffer" "jabber" "paren" "smartpa" "rainbow" "google" "undo-tree" "flycheck" "flymakexx" "flyck" "tail" "colori"))
(setq regexp-search-ring '("jabber" "auto-ne"))
